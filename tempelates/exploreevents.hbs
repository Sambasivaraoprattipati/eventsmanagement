<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="styles.css">
    <title>Events</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-family: Arial, sans-serif;
        }
        .container {
            display: flex;
            flex-wrap: wrap; 
            justify-content: center; 
            align-items: center;
            min-height: 100vh;
            background-color: #f0f0f0;
            padding-top: 20px; /* Adjust spacing from top */
        }

        .search-container {
            position: absolute;
            top: 10px;
            right: 10px;
        }

        .search-input {
            padding: 5px;
            font-size: 14px;
            border: 1px solid #ccc;
            border-radius: 5px 0 0 5px;
            width: 200px;
        }

        .search-button {
            padding: 5px 10px;
            font-size: 14px;
            background-color: #4CAF50;
            color: white;
            border: 1px solid #4CAF50;
            border-radius: 0 5px 5px 0;
            cursor: pointer;
        }

        .search-button:hover {
            background-color: #45a049;
        }

        .event-box {
            flex-basis: calc(33.33% - 20px); 
            margin: 10px; 
            padding: 20px;
            background-color: #ffffff;
            border: 1px solid #e0e0e0;
            border-radius: 10px;
            text-align: center;
            cursor: pointer;
            transition: background-color 0.3s; 
        }

        .event-box:hover {
            background-color: #e0e0e0;
        }

        .event-text {
            font-size: 18px;
            font-weight: bold;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <!-- Search box -->
        <div class="search-container">
            <input type="text" id="eventSearch" class="search-input" placeholder="Search events...">
            <button onclick="searchEvent()" class="search-button">Search</button>
        </div>

        <!-- Event boxes -->
        <div class="event-box" onclick="eventBoxClicked('Yearly Events')">
            <div class="event-icon">&#128197;</div>
            <div class="event-text">Yearly Events</div>
        </div>

        <div class="event-box" onclick="eventBoxClicked('Department Events')">
            <div class="event-icon">&#127891;</div>
            <div class="event-text">Department Events</div>
        </div>

        <div class="event-box" onclick="eventBoxClicked('Clubs Events')">
            <div class="event-icon">&#127867;</div>
            <div class="event-text">Clubs Events</div>
        </div>

        <div class="event-box" onclick="eventBoxClicked('Tech Talks')">
            <div class="event-icon">&#128187;</div>
            <div class="event-text">Tech Talks</div>
        </div>

        <div class="event-box" onclick="eventBoxClicked('Sport Events')">
            <div class="event-icon">&#127937;</div>
            <div class="event-text">Sport Events</div>
        </div>

        <div class="event-box" onclick="eventBoxClicked('Movie Promotions')">
            <div class="event-icon">&#127867;</div>
            <div class="event-text">Movie Promotions</div>
        </div>

        <div class="event-box" onclick="eventBoxClicked('Past Events')">
            <div class="event-icon">&#127871;</div>
            <div class="event-text">Past Events</div>
        </div>
    </div>

    <script>
        function fetchAndDisplayEvents(eventType) {
            return fetch(`http://localhost:4001/events/${eventType}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    return data;
                })
                .catch(error => {
                    console.error("Error fetching data:", error);
                    throw error;
                });
        }

        function eventBoxClicked(eventType) {
            fetchAndDisplayEvents(eventType)
                .then(data => {
                    const jsonString = JSON.stringify(data);
                    // Encode the string for safe URL transmission
                    const encodedData = encodeURIComponent(jsonString);

                    // Redirect to the next page with the encoded data as a query parameter
                    window.location.href = `/explore/details?data=${encodedData}`;
                })
                .catch(error => {
                    // Handle errors
                    console.error("Error:", error);
                });
        }

        function searchEvent() {
            const searchTerm = document.getElementById('eventSearch').value.trim().toLowerCase();
            
            // Define event types and their mappings (if needed)
            const eventMappings = {
                'yearly events': 'Yearly Events',
                'department events': 'Department Events',
                'clubs events': 'Clubs Events',
                'tech talks': 'Tech Talks',
                'sport events': 'Sport Events',
                'movie promotions': 'Movie Promotions',
                'past events': 'Past Events'
                // Add more as needed
            };
        
            // Check if the entered search term matches any event type
            if (searchTerm in eventMappings) {
                const eventType = eventMappings[searchTerm];
                eventBoxClicked(eventType);
            } else {
                // Handle case when no match is found
                alert(`No events found matching '${searchTerm}'.`);
            }
        }

    </script>
</body>
</html>
